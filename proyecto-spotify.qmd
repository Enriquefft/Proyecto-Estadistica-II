---
title: "Proyecto-Spotify"
format: html
editor: visual
---

# Musical preference for Lima college students according to Spotify data

Project made for the Statistics II course @Utec

## Relevance

- Applications of data in AI: The use of Artificial Intelligence (AI) in Spotify includes emotion recognition in songs, which serves to enhance personalized playlists and the overall user experience. By analyzing elements such as the tone, tempo, and lyrics of a song, Spotify can determine the mood it conveys and suggest music that aligns with the user's emotions or mental state. For example, if a user tends to listen to calming and melodic songs at night, Spotify can identify this trend and recommend similar songs during that time of day. Furthermore, Spotify uses machine learning algorithms in its recommendation system. These algorithms consider factors such as song popularity, current music trends, and what users with similar tastes are listening to. This allows Spotify to offer highly personalized recommendations.

- Applications of data in marketing: How does statistical analysis of music data contribute to today's marketing? Music is part of people's daily lives, and companies are interested in meeting the primary needs of their users. Considering Spotify as one of the most well-known music applications today, harvesting its data presents an interesting source of information for company marketing, especially since it is public data. Companies often use data from Spotify to focus on analyzing user behaviors and preferences to create more effective strategies. This could include audience segmentation and personalizing advertising messages, collaborations with popular musicians (or trending), or probabilistic analysis of both current and future trends.

## Objectives

This is a study which gathers data from multiple college students from lima with the goal of finding patterns in their musical preferences.

- [ ] Preferred genres according to the university/institute and district in which they study
- [ ] Relationship between 'danceability' and age
  - Hypothesis: Danceability is greater in people between the ages of 15 and 25
- [ ] Relationship between song duration and artist genre
- [ ] How varied is the music that people listen to according to their age and district
- [ ] How has the average song intenstity evolved over time (age of listener)

## Data obtention

Each entry in the dataset will correspond to the user ID of a student, and will have as its value a list of artists they listen to, the number of times they listen to them, among others. The data will be obtained from the Spotify API, with the following (simplified) code:

```python

# Authorize and Authenticate
# ...

from spotipy import Spoify

top_artists: Const = spotify.current_user_top_artists()
top_tracks: Const = spotify.current_user_top_tracks()

listened_artists: Spotify.Artist[] = []

# Extra data
for track in top_tracks["items"]:
    features = spotify.audio_features(track["id"])
    analysis = spotify.audio_analysis(track["id"])
    listened_artists.merge(track["artists"]['items'])

```

In order to obtain the user IDs and data, we will need to create an authentication system that allows us to obtain people's data. In addition, we will have a data pipeline that extracts relevant data from the Spotify API and stores it in a Google Sheets, which can then be exported to a CSV and finally to an R dataframe.

## Members

<table>
 <tr>
   <td>
     <img src="https://avatars.githubusercontent.com/u/104233007?v=4" alt="Arturo Magno" width="200"/>
     <br/>
     <a href="https://github.com/xkal1bur">Arturo Magno</a>
   </td>
   <td>
     <img src="https://avatars.githubusercontent.com/u/91209653?v=4" alt="Valentin Quezada" width="200"/>
     <br/>
     <a href="https://github.com/ValentinQuezada">Valentin Quezada</a>
   </td>
   <td>
     <img src="https://avatars.githubusercontent.com/u/60308719?v=4" alt="Enrique Flores" width="200"/>
     <br/>
     <a href="https://github.com/Enriquefft">Enrique Flores</a>
   </td>
 </tr>
</table>


## Variables used in the study

### Study Variables

This study requires the users to provide their Spotify data, which might be a problem for some people. We will need to make sure that the data is anonymized and that the users are aware of what data we are collecting and how we are using it. With all this considered, we expect that an atractive web app will help us get a good amount of data.
Regerding the target population, we expect to get a good amount of data from UTEC students as well as from other universities in Lima, specially if we consider that almost all university students use Spotify.

The minimum amount of data we need is 200 entries, but for a more robust study, we would need at least 500 entries, considering the amoun of students in UTEC, this will be attainable, at worst, the data will be mostly from utec which will generate bias on the first objective.

#### Primary

| Variable                   | Type     | Restrictions           |
| -------------------------- | -------- | ---------------------- |
| Study center               | Nominal  | None                   |
| Age                        | Discrete | ~ [15, 40]             |
| District                   | Nominal  | Lima districts         |
| Percieved musical variety  | Ordinal  | [1, 5]                 |
| Percieved prefered genders | Nominal  | Spotify artist genders |

#### Secondary

| Variable                                    | Type       | Restrictions   |
| ------------------------------------------- | ---------- | -------------- |
| Average danceability of prefered songs      | Continuous | [0, 1]         |
| Average loudness of prefered songs          | Continuous | [-60, 0] DB    |
| Average number of artists listened per year | Continuous | $\mathbb{R}^+$ |
| Average duration of prefered Pop songs      | Continuous | [0, 60000] ms  |
| ... of Rock songs                           | Continuous | [0, 60000] ms  |
| ... of Reggaeton songs                      | Continuous | [0, 60000] ms  |
| ... of blues songs                          | Continuous | [0, 60000] ms  |
| Rate of prefered artists genre for Pop      | Continuous | [0, 1]         |
| ... for Rock                                | Continuous | [0, 1]         |
| ... for Reggaeton                           | Continuous | [0, 1]         |
| ... for blues                               | Continuous | [0, 1]         |


```{r, message=FALSE, warning=FALSE}
librerias <- c("dplyr", "readr", "DBI")
for (paquete in librerias) {
  if (!require(paquete, character.only = TRUE)) {
    install.packages(paquete)
  }
	library(paquete, character.only = TRUE)
}
```

```{r}
host <- "aws-0-us-east-1.pooler.supabase.com"
db_name <- "postgres"
user <- "postgres.ssbtsqwpnmqovabbjzsc"
port <- 5432
db_password <- "giApLgnkOSm2p0yR"
con <- DBI::dbConnect(RPostgres::Postgres(), 
                      dbname = db_name, 
                      host = host, 
                      port = port, 
                      user = user, 
                      password = db_password)
```

```{r}
DF <- dbReadTable(con, "users")
head(DF)
```

# Caso de Estudio #1

## Distribución de la media muestral de 'danceability' para los encuestados entre 15 a 25 años.

El objetivo del primer caso de estudio es evaluar la variable 'danceability' en encuestados entre las edades de 15 y 25 años. Tenemos como dato la media de la población, $\mu$, que podemos calcular usando RStudio. Luego, filtramos la base de datos para los encuestados que tienen entre 15 y 25 años. Esta será nuestra muestra, y entonces buscamos su tamaño (n) y la desviación muestral (s).

```{r}
mu = mean(DF$average_danceability)
DFD <- filter(DF,age >= 15 & age <= 25)
n = sum(complete.cases(DFD))
s = sd(DFD$average_danceability)
paste("mu =", mu)
paste("n =", n)
paste("s =", s)
```

Entendemos para este caso que, como el tamaño de muestra es menor a 30, la media muestral se distribuye con una T-student de $n-1$ grados de libertad. Con esta información, podemos ahora resolver los siguientes incisos:

#### a. ¿Cuál es la probabilidad de que la media muestral sea mayor a 0.50?

$$P(\overline{x}>0.50)$$

$$P\left(\frac{\overline{x}-\mu}{\frac{s}{\sqrt{n}}} > \frac{0.50-\mu}{\frac{s}{\sqrt{n}}}\right)$$

$$P\left(T(n-1)>\frac{0.50-\mu}{\frac{s}{\sqrt{n}}}\right)$$

```{r}
a <- (0.50 - mu)/(s/sqrt(n))
paste("La probabilidad de que la media muestral sea mayor a 0.50 es", pt(a,n-1, lower.tail = FALSE),".")
```

#### b. ¿Será posible determinar un intervalo de confianza para la media muestral? Consideremos un nivel de confianza del 95%.

```{r}
nc = 0.95
alpha = 1 - nc
test <- t.test(DFD$average_danceability, conf.level = nc)
```

```{r}
paste("El intervalo de confianza para la media poblacional es [", test$conf.int[1], ";", test$conf.int[2], "] con un nivel de confianza del 95%.")
```

```{r}
Xs <- seq(-5, 5, by = 0.001)
plot(Xs, dt(Xs,n-1), type = "l", col = "red")
abline(v = c(-test$conf.int[1], test$conf.int[2]), col = "blue")
lines(Xs[Xs > a], dt(Xs[Xs > a],n-1), col = "green")
legend("topright", legend = c("T(x,n-1)", "respuesta de la a.", "respuesta de la b."), col = c("red", "blue","green"), lty = 1)
```


# Caso de estudio #2

## Distribución de la varianza muestral de la variedad musical de los encuestados.

El objetivo del segundo caso de estudio es evaluar la variable 'perceived_variety'. No obstante, nos falta como dato la varianza de la población, $\sigma^2$, para poder trabajar el caso. Nuestra base de datos entera servirá en este caso como muestra, y al ser de un tamaño mayor a 30, podemos aproximar la varianza muestral a la varianza poblacional. El principal objetivo será entonces calcular la varianza poblacional usando RStudio, pero para ello, primero debemos refactorizar la data nominal a numérica:

```{r}
numeric_variety <- as.numeric(factor(DF$percieved_variety))
v = var(numeric_variety)
n = sum(complete.cases(DF))
paste("v =", v)
paste("n =", n)
```

#### a. ¿Cuál sería la máxima varianza muestral con probabilidad 0.90?

$$
P(s^2\leq m) = 0.90
$$

$$
P\left(\frac{s^2(n-1)}{\sigma^2}\leq\frac{m(n-1)}{\sigma^2}\right)=0.90
$$

$$
P\left(\chi^2_{(n-1)}\leq\frac{m(n-1)}{\sigma^2}\right)=0.90
$$

```{r}
m = qchisq(0.90,n-1) * v / (n-1)
paste("La máxima varianza muestral con probabilidad 0.90 es", m,".")
```

#### b. ¿Será posible determinar un intervalo de confianza para la varianza poblacional? Consideremos un nivel de confianza del 95%.

```{r}
nc = 0.95
alpha = 1 - nc
superior = (n-1) * v / qchisq(alpha/2,n-1)
inferior = (n-1) * v / qchisq(1-alpha/2,n-1)
paste("El intervalo de confianza para la varianza poblacional es [", inferior, ";", superior, "].")
```


# Caso de estudio #3

Distribución de la diferencia de medias de la intensidad de la música escuchada por los encuestados de edad mayor a 25 años y la intensidad de la música escuchada por los encuestados de edad menor a 25 años.

```{r}
DF %>%
  filter(age <= 25) %>%
  select(average_loudness) -> df1
DF %>%
  filter(age > 25) %>%
  select(average_loudness) -> df2
```

```{r}
# Parámetros
mu1 <- mean(df1$average_loudness)
mu2 <- mean(df2$average_loudness)
s1 <- sd(df1$average_loudness)
s2 <- sd(df2$average_loudness)
n1 <- length(df1$average_loudness)
n2 <- length(df2$average_loudness)
paste("mu1 =", mu1)
paste("mu2 =", mu2)
paste("s1 =", s1)
paste("s2 =", s2)
paste("n1 =", n1)
paste("n2 =", n2)
```

¿Cual es la distribución de la diferencia de medias?

Calculamos si la varianza es igual o diferente

```{r}
var.test(df1$average_loudness, df2$average_loudness, ratio = 1, alternative = "two.sided", conf.level = 0.95)
```

Vemos que las varianzas son iguales

Estamos en el caso de: no se conoce $\sigma_1$ y $\sigma\_2$ pero se sabe que son iguales.

$$ 
\begin{align*}
& T(v) = \frac{\overline{X}_1 - \overline{X}_2 - (\mu_1 - \mu_2)} {\sqrt{\frac{s_1^2}{n_1} + \frac{s_2^2}{n_2}}} \,,\text{ siendo} \\

v &= \frac{\left(\frac{s_1^2}{n_1} + \frac{s_2^2}{n_2}\right)^2} {\frac{\left(\frac{s_1^2}{n_1}\right)^2}{n_1 - 1} + \frac{\left(\frac{s_2^2}{n_2}\right)^2}{n_2 - 1}} = \text{grados de libertad} 
\end{align*}
$$

Valores importantes

```{r}
m <- mu1 - mu2 
s <- sqrt((s1^2/n1) + (s2^2/n2)) 
v <- round(s1^2/n1 + s2^2/n2)^2/((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1)) 

alpha <- 0.05
t <- qt(1-alpha/2,v)
```

#### a. ¿Cuál es la probabilidad de que, en promedio, la intensidad de la música escuchada por los encuestados menores a 25 años supere en 10 decibeles a la intensidad de la música escuchada por los encuestados mayores a 25 años?

$$
\mathbb{P}(\overline{X}_1 - \overline{X}_2 > 10) = 1 - \mathbb{P}(\overline{X}_1 - \overline{X}_2 \leq 10) = 1 - \mathbb{P}\left(T(v) \leq \frac{10 - (\mu_1 - \mu_2)}{\sqrt{\frac{s_1^2}{n_1} + \frac{s_2^2}{n_2}}}\right)
$$

```{r}
x <- 10
pt((x-m)/s,v, lower.tail = FALSE)
```

#### b. Con 95% de confianza, ¿cuál es el intervalo de confianza para la diferencia de medias?

El intervalo de confianza se calcula con la fórmula:

$$
\mathbb{P}\left(\overline{X}_1 - \overline{X}_2 - t_{(1-\alpha/2,v)} \cdot \sqrt{\frac{s_1^2}{n_1} + \frac{s_2^2}{n_2}} \leq \mu_1 - \mu_2 \leq \overline{X}_1 - \overline{X}_2 + t_{(1-\alpha/2,v)} \cdot \sqrt{\frac{s_1^2}{n_1} + \frac{s_2^2}{n_2}}\right) = 0.95
$$

El intervalo de confianza es:

```{r}
ic <- m + c(-1,1)*t*s
paste("El intervalo de confianza para la varianza poblacional es [", ic[1], ";", ic[2], "] con un nivel de confianza del 95%.")
```

Otra forma de calcularlo:

```{r}
t.test(df1$average_loudness, df2$average_loudness, alternative = "two.sided", var.equal = TRUE, conf.level = 0.95)
```

¿Cómo se ve la distribución de la diferencia de medias?

```{r}
Xs <- seq(-7, 7, by = 0.001)
plot(Xs, dt(Xs,v), type = "l", col = "red")
abline(v = c(ic[1], ic[2]), col = "blue")
lines(Xs[Xs > t], dt(Xs[Xs > t],v), col = "green")
legend("topright", legend = c("T(x,v)", "respuesta de la a.", "respuesta de la b."), col = c("red","green", "blue"), lty = 1)
```

## Refereces

- Hujran, O., Alikaj, A., Durrani, U., & Al-Dmour, N. A. (2020). Big Data and its Effect on the Music Industry. ACM. https://doi.org/10.1145/3378936.3378957
- Álvarez, P., De Quirós, J. G., & Baldassarri, S. (2023). RIADA: a Machine-Learning based infrastructure for recognising the emotions of Spotify songs. International Journal of Interactive Multimedia and Artificial Intelligence, 8(2), 168. https://doi.org/10.9781/ijimai.2022.04.002
- Spotify for Developers. (18 de enero de 2024).
  https://developer.spotify.com/

